package main

TEST_PROGRAM :: []u64{
    u64(OPCODES.MOVEREG), 0xAB, 0,
    u64(OPCODES.MOVEREG), 0xCD, 1,
    u64(OPCODES.ADD), 0, 1,
    u64(OPCODES.POP), 2,
    u64(OPCODES.PUSH), 2,
    u64(OPCODES.PUSH), 1,
    u64(OPCODES.NATIVE),
    u64(OPCODES.MOVEHEAP), 0x01, 0x00,
    u64(OPCODES.MOVEHEAP), 0x0A, 0x01,
    u64(OPCODES.PUSH), 0x00,
    u64(OPCODES.PUSH), 0x00,
    u64(OPCODES.NATIVE),
}

LOOP_TEST :: []u64{
    u64(OPCODES.MOVEREG), 0x01, 0,
    u64(OPCODES.MOVEREG), 0x0A, 1,
    u64(OPCODES.PUSH), 1,
    u64(OPCODES.PUSH), 1,
    u64(OPCODES.NATIVE),
    u64(OPCODES.MOVEHEAP), 0x01, 0x00,
    u64(OPCODES.MOVEHEAP), 0x0A, 0x01,
    u64(OPCODES.PUSH), 0x00,
    u64(OPCODES.PUSH), 0x00,
    u64(OPCODES.NATIVE),
    u64(OPCODES.DEC), 1,
    u64(OPCODES.GT), 1, 0,
    u64(OPCODES.JMPNEQ), 0x06,
}

FUNC_TEST :: []u64 {
    u64(OPCODES.MOVEREG), 0x01, 0,
    
    u64(OPCODES.FUNC), 0x00,

    u64(OPCODES.RET),
}

MEMORY_CRASHER :: []u64 {
    // 43 72 61 73 68 69 6E 67 2E 2E 2E
    // Crashing...
    u64(OPCODES.MOVEHEAP), 0x0C, 0x00,
    u64(OPCODES.MOVEHEAP), 0x43, 0x01,
    u64(OPCODES.MOVEHEAP), 0x72, 0x02,
    u64(OPCODES.MOVEHEAP), 0x61, 0x03,
    u64(OPCODES.MOVEHEAP), 0x73, 0x04,
    u64(OPCODES.MOVEHEAP), 0x61, 0x05,
    u64(OPCODES.MOVEHEAP), 0x73, 0x06,
    u64(OPCODES.MOVEHEAP), 0x68, 0x07,
    u64(OPCODES.MOVEHEAP), 0x69, 0x08,
    u64(OPCODES.MOVEHEAP), 0x6E, 0x09,
    u64(OPCODES.MOVEHEAP), 0x67, 0x0A,
    u64(OPCODES.MOVEHEAP), 0x2E, 0x0B,
    u64(OPCODES.MOVEHEAP), 0x2E, 0x0C,
    u64(OPCODES.PUSH),     0x00,
    u64(OPCODES.PUSH),     0x00,
    u64(OPCODES.NATIVE), 
    u64(OPCODES.MOVEREG), 0x01, 0,
    u64(OPCODES.MOVEREG), 0xFFFFFFFF, 1,
    u64(OPCODES.PPUSH), 0xFFFF,
    u64(OPCODES.DEC), 1,
    u64(OPCODES.GT), 1, 0,
    u64(OPCODES.JMPNEQ), 0x2F,
}

NO_PROGRAM :: []u64{
    u64(OPCODES.MOVEHEAP), 29, 0x00,
    u64(OPCODES.MOVEHEAP), 78, 1,
    u64(OPCODES.MOVEHEAP), 79, 2,
    u64(OPCODES.MOVEHEAP), 32, 3,
    u64(OPCODES.MOVEHEAP), 80, 4,
    u64(OPCODES.MOVEHEAP), 82, 5,
    u64(OPCODES.MOVEHEAP), 79, 6,
    u64(OPCODES.MOVEHEAP), 71, 7,
    u64(OPCODES.MOVEHEAP), 82, 8,
    u64(OPCODES.MOVEHEAP), 65, 9,
    u64(OPCODES.MOVEHEAP), 77, 10,
    u64(OPCODES.MOVEHEAP), 40, 11,
    u64(OPCODES.MOVEHEAP), 83, 12,
    u64(OPCODES.MOVEHEAP), 72, 13,
    u64(OPCODES.MOVEHEAP), 79, 14,
    u64(OPCODES.MOVEHEAP), 85, 15,
    u64(OPCODES.MOVEHEAP), 76, 16,
    u64(OPCODES.MOVEHEAP), 68, 17,
    u64(OPCODES.MOVEHEAP), 32, 18,
    u64(OPCODES.MOVEHEAP), 78, 19,
    u64(OPCODES.MOVEHEAP), 69, 20,
    u64(OPCODES.MOVEHEAP), 86, 21,
    u64(OPCODES.MOVEHEAP), 69, 22,
    u64(OPCODES.MOVEHEAP), 82, 23,
    u64(OPCODES.MOVEHEAP), 32, 24,
    u64(OPCODES.MOVEHEAP), 83, 25,
    u64(OPCODES.MOVEHEAP), 69, 26,
    u64(OPCODES.MOVEHEAP), 69, 27,
    u64(OPCODES.MOVEHEAP), 41, 28,
    u64(OPCODES.MOVEHEAP), 10, 29,
    u64(OPCODES.PUSH),     0x00,
    u64(OPCODES.PUSH),     0x00,
    u64(OPCODES.NATIVE),
}

HELLO_WORLD :: []u64{
    // 48 65 6C 6C 6F 20 57 6F 72 6C 64 21
    // "Hello World!"
    u64(OPCODES.MOVEHEAP), 0x0D, 0x00,
    u64(OPCODES.MOVEHEAP), 0x48, 0x01,
    u64(OPCODES.MOVEHEAP), 0x65, 0x02,
    u64(OPCODES.MOVEHEAP), 0x6C, 0x03,
    u64(OPCODES.MOVEHEAP), 0x6C, 0x04,
    u64(OPCODES.MOVEHEAP), 0x6F, 0x05,
    u64(OPCODES.MOVEHEAP), 0x20, 0x06,
    u64(OPCODES.MOVEHEAP), 0x57, 0x07,
    u64(OPCODES.MOVEHEAP), 0x6F, 0x08,
    u64(OPCODES.MOVEHEAP), 0x72, 0x09,
    u64(OPCODES.MOVEHEAP), 0x6C, 0x0A,
    u64(OPCODES.MOVEHEAP), 0x64, 0x0B,
    u64(OPCODES.MOVEHEAP), 0x21, 0x0C,
    u64(OPCODES.MOVEHEAP), 0x0A, 0x0D,
    u64(OPCODES.PUSH),     0x00,
    u64(OPCODES.PUSH),     0x00,
    u64(OPCODES.NATIVE), 
}

